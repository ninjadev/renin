var audioBarShader = "varying vec2 vUv;\nuniform float width;\nuniform float height;\nuniform float shadowSize;\nuniform float shadowOpacity;\nuniform float[600] beatBins;\nuniform float beatOffset;\nuniform float bpm;\nuniform float beats;\n\n\nvoid main() {\n    float offsettedBeats = beats + beatOffset;\n    int beat = int(vUv.x * beats);\n\n    float pixel = 1. / width;\n\n    vec3 slate_400 = vec3(float(0x94) / 255., float(0xa3) / 255., float(0xb8) / 255.);\n    vec3 slate_500 = vec3(float(0x64) / 255., float(0x74) / 255., float(0x8b) / 255.);\n    vec3 slate_600 = vec3(float(0x47) / 255., float(0x55) / 255., float(0x69) / 255.);\n    vec3 slate_700 = vec3(float(0x33) / 255., float(0x41) / 255., float(0x55) / 255.);\n    vec3 slate_800 = vec3(float(0x1e) / 255., float(0x29) / 255., float(0x3b) / 255.);\n    vec3 color = slate_800;\n    float barGroups = beats / 16.;\n    float isStrongBeat = step(1., mod(vUv.x * width, width / beats * 4.));\n    vec3 beatColor = mix(slate_400, slate_500, isStrongBeat);\n    color = mix(color, slate_700, float(0xcc) / 255. * step(1., mod(-beatOffset / 16. + vUv.x * barGroups, 2.)));\n    color = mix(color, slate_600, float(0xcc) / 255. * (1. - step(beatBins[beat], abs(vUv.y - 0.5))));\n    color = mix(color, beatColor, float(0x88) / 255. * (1. - step(.5 + (1. - isStrongBeat), mod(vUv.x * width, width / beats))));\n    gl_FragColor = vec4(color, 1.);\n}\n";

export { audioBarShader as default };
